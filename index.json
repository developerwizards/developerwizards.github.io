[{"categories":["Spark"],"content":"\rNote\rThis is dump blog, will soon start writing real ones.\rIn Python, we can implement a matrix as a nested list (list inside a list). We can treat each element as a row of the matrix. For example X = [[1, 2], [4, 5], [3, 6]] would represent a 3x2 matrix. The first row can be selected as X[0]. And, the element in the first-row first column can be selected as X[0][0]. Transpose of a matrix is the interchanging of rows and columns. It is denoted as X’. The element at ith row and jth column in X will be placed at jth row and ith column in X’. So if X is a 3x2 matrix, X’ will be a 2x3 matrix. print(\"hello World, here is a example to transpose a matrix using list comprehension\") X = [[12,7], [4 ,5], [3 ,8]] result = [[X[j][i] for j in range(len(X))] for i in range(len(X[0]))] for r in result: print(r) ","date":"2022-06-04","objectID":"/mypost/:0:0","tags":["Spark","Python"],"title":"Spark Architecture","uri":"/mypost/"}]